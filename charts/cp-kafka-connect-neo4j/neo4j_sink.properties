# A simple configuration properties, is the same as contrib.sink.avro.neo4j.json
name=neo4j-connector
topics=kafkaTestNeo4j
#topics.regex=[a-zA-Z]+[0-9]+\.kafkaTestNeo4j
#transforms=dropPrefix
#transforms.dropPrefix.type:org.apache.kafka.connect.transforms.RegexRouter
#transforms.dropPrefix.regex:[a-zA-Z]+[0-9]+\.kafkaTestNeo4j
#transforms.dropPrefix.replacement:$1
connector.class=streams.kafka.connect.sink.Neo4jSinkConnector
errors.retry.timeout=-1
errors.retry.delay.max.ms=1000
errors.tolerance=all
errors.log.enable=true
errors.log.include.messages=true
neo4j.server.uri=bolt://neo4j-test-neo4j-core-0.neo4j-test-neo4j:7687
neo4j.authentication.basic.username=neo4j
neo4j.authentication.basic.password=password
neo4j.encryption.enabled=false
neo4j.topic.cypher.kafkaTestNeo4j= MERGE (a:Entity{idEntity:event.uuidSender}) \
ON CREATE SET a.bc=0 \
MERGE (b:Entity{idEntity:event.uuidReceiver}) \
ON CREATE SET b.bc=0 \
MERGE (a)-[r:CONNECTED]-(b) \
ON CREATE SET r.timestamp=[], r.proximityIndex=[] \
SET r.timestamp=r.timestamp+[event.timestamp], r.proximityIndex=r.proximityIndex+[event.proximityIndex]
#key.converter=org.apache.kafka.connect.json.JsonConverter
#key.converter.schemas.enable=true
value.converter=org.apache.kafka.connect.json.JsonConverter
value.converter.schemas.enable=false